#!/bin/sh

######################################################################
# Initial Configuration
######################################################################

# === Initialize shell environment ===================================
set -eu
umask 0022
export LC_ALL=C
export UNIX_STD=2003

# === Define the functions for printing usage and exiting ============
print_usage_and_exit() {
    cat <<-USAGE 1>&2
	Usage: ${0##*/} [<options>] <subcommand> <pm-options>
	Options:
	  -m | --manager=<package-manager> ... specify package manager to execute subcommand.

	Subcommands:
	  install <package> ... install package. This subcommand needs to --manager option.
	  list ................ list installable packages.
	  list-installed ...... list installed packages.
	  list-upgradable ..... list upgradable packages.
	  search <package> .... search in installable packages.
	  update .............. update package list cache.
	  upgrade ............. upgrade installed package to the latest.
	USAGE
    exit 1
}

error_exit() {
    ${2+:} false && echo "${0##*/}: $2" 1>&2
    exit $1
}

# === Detect home directory of this app ==============================
Homedir="$(d=${0%/*}/; [ "_$d" = "_$0/" ] && d='./'; cd "$d."; pwd)"


######################################################################
# Argument Parsing
######################################################################

# === Read options ===================================================
while :; do
    case "${1:-}" in
        -m)
            pm="${2}"
            shift 2
            ;;
        --manager=*)
            pm="${1#--manager=}"
            shift
            ;;
        --)
            shift
            break
            ;;
        --help|-h|--version)
            print_usage_and_exit
            ;;
        --*|-*)
            error_exit 1 'Invalid option'
            ;;
        *)
            break
            ;;
    esac
done

# === Read Subcommand ================================================
subcmd="${1:-}" && shift


######################################################################
# Main Routine
######################################################################
if [ "$(printf '%s\n' "$subcmd" | tr ',' '\n' | wc -l)" -ge 2 ]; then
    printf '%s\n' "$subcmd" | tr ',' '\n' | while read -r cmd; do
        "$0" "$cmd" "$@"
    done
    exit
fi

if [ "$subcmd" = help ]; then
    if [ -n "${pm:-}" ]; then
        ls "${Homedir}/pmo-${pm}" >/dev/null
        printf '%s\n' "usage: pmo --manager=${pm} <subcommand> [args...]"
        printf '%s\n' 'subcommand:'
        cat "${Homedir}/pmo-${pm}" | sed -n '/^#@ SUBCMD_CASE$/,/^esac$/p' | grep ')' >&2
    else
        find "$Homedir" -not -type d -not -path '*/.*' -name 'pmo-*' |
            while IFS= read -r pm; do
                "$0" --manager="${pm##*/pmo-}" help || true
                echo
            done >&2
    fi
    exit
fi

if [ "$subcmd" = install ] || [ -n "${pm:-}" ]; then
    "${Homedir}/pmo-${pm}" "$subcmd" "$@"
    exit
fi

find "$Homedir" -not -type d -not -path '*/.*' -name 'pmo-*' |
    while IFS= read -r pm; do
        if ! "$pm" "$subcmd" "$@" </dev/tty; then
            exit 1
        fi
    done
