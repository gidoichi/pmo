#!/bin/sh

set -eu

install() {
    all=false
    auto=false
    case "${1:-}" in
        --all)
            all=true
            shift
            ;;
        --auto)
            auto=true
            shift
            ;;
    esac

    targets=$(
        if   [ "$all" = 'true' ]; then
            "$0" list 2>/dev/null
        elif [ "$auto" = 'true' ]; then
            "$0" list 2>/dev/null | while IFS= read -r file; do
                if type "$file" >/dev/null; then
                    printf '%s\n' "$file"
                fi
            done
        else
            # show an error message when no arguments are given
            : "$1"

            for file in "$@"; do
                printf '%s\n' "$file"
            done
        fi | tr '\n' ':' | sed 's/:$//')

    mkdir -p './config/plugins'

    printf '%s\n' "$targets" | tr ':' '\n' |
        while IFS= read -r file; do
            if [ -e "./config/plugins/${file}" ]; then
                continue
            fi

            # show an error message and exit when the managers are not found
            ls "./managers/plugins/${file}" >/dev/null

            if ! debug ln -s "../../managers/plugins/${file}" './config/plugins/'; then
                exit 1
            fi
        done
}

remove() {
    all=false
    case "${1:-}" in
        --all)
            all=true
            shift
            ;;
    esac

    targets=$(
        if   [ "$all" = 'true' ]; then
            "$0" list-installed 2>/dev/null
        else
            # show an error message when no arguments are given
            : "$1"

            for file in "$@"; do
                printf '%s\n' "$file"
            done
        fi | tr '\n' ':' | sed 's/:$//')

    printf '%s\n' "$targets" | tr ':' '\n' | while IFS= read -r file; do
        [ "$file" = "${file##*/}" ] || exit 1
        [ -e "./config/plugins/${file}" ] || exit 1
        debug rm "./config/plugins/${file}"
    done
}

Homedir="$(d=${0%/*}/; [ "_$d" = "_$0/" ] && d='./'; cd "$d.."; pwd)"
cd "$Homedir"
for file in $(find './utils' -not -type d); do
    . "$file"
done

subcmd="$1" && shift

#@ SUBCMD_CASE
case "$subcmd" in
    install)        # install managers. usage: `pmo --manager=pmo install <--all|--auto|<manager...>>`
        install "$@"
        ;;
    remove)         # remove managers. usage: `pmo --manager=pmo remove <--all|<manager...>>`
        remove "$@"
        ;;
    list)           # list all installable managers
        ls './managers/plugins'
        ;;
    list-installed) # list installed managers
        ls './config/plugins'
        ;;
esac
