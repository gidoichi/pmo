#!/bin/sh

set -eu

install() {
    target="$1"
    ls "$target" >/dev/null

    mkdir -p "${LIST_FILE%/*}"
    {
        if [ -e "$LIST_FILE" ]; then
            cat "$LIST_FILE"
        fi
        debug printf '\n%s\n' "$target"
    } | sort | uniq > "${LIST_FILE}.new"
    mv "${LIST_FILE}.new" "$LIST_FILE"
}

remove() {
    target="$1"
    cat "$LIST_FILE" | while IFS= read -r repo; do
        if [ "$repo" = "$target" ]; then
            continue
        fi
        printf '%s\n' "$repo"
    done | sort | uniq > "${LIST_FILE}.new"
    diff "${LIST_FILE}.new" "$LIST_FILE" >/dev/null && exit 1
    mv "${LIST_FILE}.new" "$LIST_FILE"
}

upgrade() {
    if [ ! -f "${LIST_FILE}" ] || [ "$(du -k "${LIST_FILE}" | awk '{print $1}')" -eq 0 ]; then
        return
    fi

    upagent=0
    if [ -z ${SSH_AUTH_SOCK+_} ] && [ -z ${SSH_AGENT_PID+_} ]; then
        upagent=1
        eval $(debug ssh-agent)
        debug ssh-add
    fi

    cat "${LIST_FILE}" |
        while IFS= read -r repo; do
            if [ -z "$repo" ]; then
                continue
            fi
            cd "$repo" || exit 1
            debug git pull "$(git remote get-url origin)" "$(git rev-parse --abbrev-ref HEAD)"
        done

    if [ "$upagent" -ne 0 ]; then
        upagent=0
        debug ssh-agent -k
    fi
}

Homedir="$(d=${0%/*}/; [ "_$d" = "_$0/" ] && d='./'; cd "$d../.."; pwd)"
cd "$Homedir"
for file in $(find './utils' -not -type d); do
    . "$file"
done
subcmd="$1" && shift

LIST_FILE='./config/git/installed-list'

#@ SUBCMD_CASE
case "$subcmd" in
    install)        # add target repositories
        if [ $# -ge 2 ]; then
            "$0" "$subcmd" "$1"
            shift
            "$0" "$subcmd" "$@"
            exit
        fi

        install "$@"
        ;;

    remove)         # remove targetted repositories
        if [ $# -ge 2 ]; then
            "$0" "$subcmd" "$1"
            shift
            "$0" "$subcmd" "$@"
            exit
        fi

        remove "$@"
        ;;

    list-installed) # list targetted repositories
        cat "$LIST_FILE" || true
        ;;

    upgrade)        # `git pull` in all targetted repositories
        upgrade "$@"
        ;;
esac
